{"version":3,"sources":["utils/images/applemusic.svg","utils/images/youtube.svg","utils/images/spotify.svg","utils/images/soundcloud.svg","utils/images/audiomack.svg","utils/images/logo.png","components/Header/CloseHamburger.jsx","components/Header/Header.jsx","components/Player/InfoTicker.jsx","components/Player/Player.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CloseHamburger","useState","hamburgerClassName","setHamburgerClassName","navClassName","setNavClassName","className","onClick","href","src","applemusic","alt","youtube","spotify","soundcloud","audiomack","Header","logo","InfoTicker","index","Player","IconButton","FastRewind","PlayCircleOutline","fontSize","FastForward","MoreVert","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6TCqF5BC,G,MA7EQ,WAAO,IAAD,EAC2BC,mBAAS,YADpC,mBACnBC,EADmB,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAEnBG,EAFmB,KAELC,EAFK,KAe3B,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAWJ,EAAoBK,QAbxC,WAC6B,aAAvBL,GACFC,EAAsB,iBACtBE,EAAgB,SACgB,kBAAvBH,IACTC,EAAsB,YACtBE,EAAgB,OAQd,yBAAKC,UAAU,sBAGjB,yBAAKA,UAAWF,GACd,wBAAIE,UAAU,kBACZ,4BACE,uBAAGE,KAAK,cAAR,WAIF,4BACE,uBAAGA,KAAK,cAAR,UAIF,4BACE,uBAAGA,KAAK,cAAR,SAIF,4BACE,uBAAGA,KAAK,cAAR,WAMJ,wBAAIF,UAAU,sBACZ,4BACE,uBAAGE,KAAK,cACN,yBAAKC,IAAKC,IAAYC,IAAI,uBAG9B,4BACE,uBAAGH,KAAK,cACN,yBAAKC,IAAKG,IAASD,IAAI,mBAG3B,4BACE,uBAAGH,KAAK,cACN,yBAAKC,IAAKI,IAASF,IAAI,mBAG3B,4BACE,uBAAGH,KAAK,cACN,yBAAKC,IAAKK,IAAYH,IAAI,sBAG9B,4BACE,uBAAGH,KAAK,cACN,yBAAKC,IAAKM,IAAWJ,IAAI,0B,iBC5DxBK,G,MAXA,WAEb,OACE,yBAAKV,UAAU,UACb,kBAAC,EAAD,MAEA,yBAAKG,IAAKQ,IAAMN,IAAI,OAAOL,UAAU,Y,QCI5BY,EAZI,WACjB,OACE,kBAAC,IAAD,MACG,cAAGC,MAAH,OACK,oCACE,oE,gDC2CCC,G,MA5CA,WAEb,OACE,yBAAKd,UAAU,UACb,yBAAKA,UAAU,qBACb,0BAAMA,UAAU,cAAhB,SACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,qCAIrB,0BAAMA,UAAU,YAAhB,SAGF,kBAAC,EAAD,MAEA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,gBACb,yBAAKG,IAAI,uIAAuIE,IAAI,aAAaL,UAAU,eAC3K,+BAKF,yBAAKA,UAAU,mBACb,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,OAEQ,kBAACD,EAAA,EAAD,KAAY,kBAACE,EAAA,EAAD,CAAmBC,SAAS,WAClD,kBAACH,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,QAGJ,yBAAKnB,UAAU,qBAEb,kBAACoB,EAAA,EAAD,W,MC5BKC,MAVf,WACE,OACE,yBAAKrB,UAAU,QACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,QCCcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bc41802b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/applemusic.d90eeec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.d57a47e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/spotify.aee4e77e.svg\";","module.exports = __webpack_public_path__ + \"static/media/soundcloud.888e6582.svg\";","module.exports = __webpack_public_path__ + \"static/media/audiomack.f07891bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.387f80ce.png\";","import React, { useState } from 'react'\r\nimport applemusic from '../../utils/images/applemusic.svg'\r\nimport youtube from '../../utils/images/youtube.svg'\r\nimport spotify from '../../utils/images/spotify.svg'\r\nimport soundcloud from '../../utils/images/soundcloud.svg'\r\nimport audiomack from '../../utils/images/audiomack.svg'\r\nimport '../../utils/css/CloseHamburger.css'\r\n\r\nconst CloseHamburger = () => {\r\n  const [ hamburgerClassName, setHamburgerClassName ] = useState('menu-btn')\r\n  const [ navClassName, setNavClassName ] = useState('')\r\n\r\n  function handleHamburgerClick() {\r\n    if (hamburgerClassName === 'menu-btn') {\r\n      setHamburgerClassName('menu-btn open')\r\n      setNavClassName('open')\r\n    } else if (hamburgerClassName === 'menu-btn open') {\r\n      setHamburgerClassName('menu-btn')\r\n      setNavClassName('')\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className='container'>\r\n      <div className={hamburgerClassName} onClick={handleHamburgerClick}>\r\n        <div className='menu-btn__burger'></div>\r\n      </div>\r\n\r\n      <nav className={navClassName}>\r\n        <ul className='mainnav__items'>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              Dextar\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              Music\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              Shop\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              Press\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className='socialmedia__items'>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              <img src={applemusic} alt=\"Apple Music logo\"/>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              <img src={youtube} alt=\"YouTube logo\"/>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              <img src={spotify} alt=\"Spotify logo\"/>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              <img src={soundcloud} alt=\"Soundcloud logo\"/>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"sharif.com\">\r\n              <img src={audiomack} alt=\"Audiomack logo\"/>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CloseHamburger\r\n","import React from 'react'\r\nimport CloseHamburger from './CloseHamburger.jsx'\r\nimport logo from '../../utils/images/logo.png'\r\nimport '../../utils/css/Header.css'\r\n\r\nconst Header = () => {\r\n  \r\n  return (\r\n    <div className='header'>\r\n      <CloseHamburger />\r\n\r\n      <img src={logo} alt='Logo' className='logo' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Ticker from 'react-ticker'\r\n\r\nconst InfoTicker = () => {\r\n  return (\r\n    <Ticker>\r\n      {({ index }) => (\r\n            <>\r\n              <p>This is the Headline of element!</p>\r\n            </>\r\n        )}\r\n    </Ticker>\r\n  )\r\n}\r\n\r\nexport default InfoTicker","import React from 'react'\r\nimport InfoTicker from './InfoTicker.jsx'\r\nimport { IconButton, Button } from '@material-ui/core';\r\nimport { PlayCircleOutline, PauseCircleOutline } from '@material-ui/icons'\r\nimport { FastRewind, FastForward, ShoppingCart, MoreVert } from '@material-ui/icons'\r\nimport '../../utils/css/Player.css'\r\n\r\nconst Player = () => {\r\n  let playing = true;\r\n  return (\r\n    <div className='player'>\r\n      <div className='progress__section'>\r\n        <span className='start-time'>00:21</span>\r\n        <div className='progress-bar'>\r\n          <div className='current-progress'>\r\n            <div className='current-progress__outercircle'>\r\n              <div className='current-progress__innercircle'></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <span className='end-time'>3:41</span>\r\n      </div>\r\n\r\n      <InfoTicker />\r\n\r\n      <div className='control-panel__section'>\r\n        <div className='song-details'>\r\n          <img src='https://is1-ssl.mzstatic.com/image/thumb/Music114/v4/d3/09/5e/d3095eaa-1a53-72c6-1088-abe733a7d988/886448775256.jpg/200x200bb-60.jpg' alt='Song Cover' className='song-cover'/>\r\n          <div>\r\n           {/*<span className='artiste-name'>Dextar</span>\r\n           <span className='song-name'>The One</span>*/}\r\n          </div>\r\n        </div>\r\n        <div className='player-settings'>\r\n          <IconButton>\r\n            <FastRewind />\r\n          </IconButton>\r\n          {playing? <IconButton><PlayCircleOutline fontSize='large' /></IconButton> : <IconButton><PauseCircleOutline /></IconButton>}\r\n          <IconButton>\r\n            <FastForward />\r\n          </IconButton>\r\n        </div>\r\n        <div className='services__section'>\r\n          {/*<Button variant='contained' color='primary' size='small' startIcon={<ShoppingCart />}>Buy</Button>*/}\r\n          <MoreVert />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport Header from './components/Header/Header.jsx'\nimport Player from './components/Player/Player.jsx'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"site\">\n      <Header />\n\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}